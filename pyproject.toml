[build-system]
requires = ["setuptools>=77.0.1"]
build-backend = "setuptools.build_meta"

[project]
name = "cascade-vad"
version = "0.2.0"
description = "高性能异步并行VAD处理库"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Xucailiang", email = "xucailiang.ai@gmail.com"}
]
maintainers = [
    {name = "Xucailiang", email = "xucailiang.ai@gmail.com"}
]
keywords = [
    "voice-activity-detection", "vad", "audio-processing", 
    "speech", "async", "parallel", "high-performance"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
requires-python = ">=3.11"

dependencies = [
    # Core dependencies
    "pydantic>=2.4.0,<3.0.0",
    "numpy>=1.24.0,<2.0.0",
    "scipy>=1.11.0,<2.0.0",
    "asyncio-throttle>=1.0.0,<2.0.0",
    "onnxruntime>=1.22.1,<2.0.0",
    "torchaudio>=2.7.1,<3.0.0",
    "silero-vad>=5.1.2,<6.0.0",
    "soundfile>=0.13.1,<0.14.0",
    "psutil>=7.0.0,<8.0.0",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=8.4.1,<9.0.0",
    "pytest-cov>=6.2.1,<7.0.0",
    "pytest-asyncio>=1.1.0,<2.0.0",
    "pytest-benchmark>=5.1.0,<6.0.0",
    "pytest-xdist>=3.8.0,<4.0.0",
    "black>=25.1.0,<26.0.0",
    "isort>=6.0.1,<7.0.0",
    "mypy>=1.17.0,<2.0.0",
    "pre-commit>=4.2.0,<5.0.0",
    "ruff>=0.12.7,<0.13.0",
    "flake8>=7.3.0,<8.0.0",
]

# Documentation dependencies
docs = [
    "mkdocs>=1.6.1,<2.0.0",
    "mkdocs-material>=9.0.0,<10.0.0",
    "mkdocstrings[python]>=0.24.0,<1.0.0",
]

# Web demo dependencies
demo = [
    "fastapi>=0.116.1,<0.117.0",
    "uvicorn>=0.35.0,<0.36.0",
    "websockets>=15.0.1,<16.0.0",
    "python-multipart>=0.0.20,<0.0.21",
    "aiofiles>=24.1.0,<25.0.0",
    "matplotlib>=3.10.5,<4.0.0",
]

# All optional dependencies
all = [
    "cascade[dev,docs,demo]",
]

[project.urls]
Documentation = "https://cascade-vad.readthedocs.io/"
Repository = "https://github.com/xucailiang/cascade"
Issues = "https://github.com/xucailiang/cascade/issues"
Changelog = "https://github.com/xucailiang/cascade/blob/main/CHANGELOG.md"

[project.scripts]
cascade-benchmark = "cascade.scripts.benchmark:main"
cascade-validate = "cascade.scripts.validate:main"

# ===== 测试配置 =====
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short"
]
markers = [
    "asyncio: mark test as async",
]
asyncio_mode = "auto"

# ===== 代码格式化 =====
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
    | \.mypy_cache
    | \.pytest_cache
    | \.venv
    | build
    | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["cascade"]
known_third_party = ["numpy", "scipy", "pydantic", "pytest"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# ===== 类型检查 =====
[tool.mypy]
python_version = "3.12"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_return_any = true
show_error_codes = true
show_column_numbers = true

[[tool.mypy.overrides]]
module = [
    "scipy.*",
    "onnxruntime.*",
    "vllm.*",
]
ignore_missing_imports = true

# ===== Ruff配置 =====
[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "A",   # flake8-builtins
    "PL",  # pylint
    "SIM", # flake8-simplify
]
ignore = [
    "E501",   # line too long, handled by black
    "B008",   # do not perform function calls in argument defaults
    "PLR0913", # too many arguments to function call
]

[tool.ruff.per-file-ignores]
"tests/*" = ["PLR2004"]  # Magic value used in comparison

# ===== Setuptools配置 =====
[tool.setuptools.packages.find]
where = ["."]
include = ["cascade*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
cascade = ["py.typed"]

[tool.setuptools.exclude-package-data]
"*" = [
    "/.github",
    "/.vscode",
    "/tests",
    "/examples",
    "/docs",
    "/scripts",
]

